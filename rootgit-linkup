#!/usr/bin/env bash

# Make symlinks to files in the rootgit!
# IE `mkdir -p` in root for all non-empty dirs in rootgit dir,
# then symlink the files themselves.

if [[ $# -lt 2 ]]; then
    echo "usage: $0 <root dir> <path to rootgit within root>"
    exit 1
fi

origdir=$(pwd)
relroot="$1"
relrootgit="$2"

cd "$relroot"
if [[ $? -ne 0 ]]; then
    echo "root doesn't exist"
    exit 1
fi
absroot=$(pwd)

cd "$relrootgit"
if [[ $? -ne 0 ]]; then
    echo "rootgit doesn't exist"
    exit 1
fi
absrootgit=$(pwd)

getDotPath(){
    # construct a ../ path to undo a relative path
    pathparts=$(echo $1 | tr '/' '\n')
    ndoubledots=$(echo "$pathparts" | grep '^\.\.$' | wc -l)
    ndirs=$(echo "$pathparts" | grep -E -v '^\.\.?$' | grep '.' | wc -l)
    for i in $(seq $(( $ndirs - $ndoubledots )) ); do
        echo -n "../"
    done
}

cd "$absrootgit"
rgfiles=$(find '(' -type f -o -type l ')' '!' -path '*.rootgit*' '!' -path '*/.git/*' '!' -path '*.rg-linkdir/*')
rgdirs=$(find -type d -name '*.rg-linkdir')

# link in the files!
cd "$absroot"
for f in $rgfiles $rgdirs; do
    dnf=$(dirname "$f")
    rename=$(basename "$f")
    rename=${rename/.rg-linkdir/}
    rename=${rename/.rg-copy/}
    rf="$dnf/$rename"

    mkdir -p "$dnf"
    if [[ -f "$rf" || -d "$rf" ]]; then
        # since -f tells me "true" for symlinks...
        if [[ ! -L "$rf" ]]; then
            echo "preserving old file in $absrootgit/overwrites.rootgit/$rf"
            mkdir -p "$absrootgit/overwrites.rootgit/$dnf"
            mv "$rf" "$absrootgit/overwrites.rootgit/$rf"
        else
            # remove the symlink, since we will just replace it
            rm "$rf"
        fi
    fi
    cd "$dnf"
    if [[ "$f" =~ ^.*\.rg-copy$ ]]; then
        cp "$absrootgit/$f" "$rename"
    else
        ln -s --force "$(getDotPath "$dnf")${relrootgit}/$f" ./"$rename"
    fi
    cd "$absroot"
done

